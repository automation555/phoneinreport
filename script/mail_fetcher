#!/usr/bin/env ruby
RAILS_ENV = ENV['RAILS_ENV'] || 'production'
require File.expand_path(File.dirname(__FILE__) + '/../config/boot.rb')
require File.expand_path(File.dirname(__FILE__) + '/../config/environment.rb')

class MailFetcherDaemon < Daemon::Base
  @sleep_time = (RAILS_ENV == 'production' ? 30 : 10)

  def self.start
    non_options = %w(id campaign_id created_at updated_at)
    puts "Starting MailFetcherDaemon"

    @fetchers = []
    Site.find(:all).each do |s|
      s.campaigns.each do |c|
        config = c.mail_config.attributes.reject {|k,v| non_options.include?(k)}
        config['type'] = config.delete('server_type') 
        @fetchers << Fetcher.create({:receiver => VoiceMailHandler}.merge(config.to_options))
      end
    end

    loop do
      @fetchers.each do |f|
        f.fetch
        sleep(@sleep_time)
      end
    end
  end
  
=begin
  @config = YAML.load_file("#{RAILS_ROOT}/config/mail_fetcher.yml")
  @config = @config[RAILS_ENV].to_options

  def self.start
    put "starting  MailFetcherDaemon"
    # Add your own receiver object below
    @fetcher = Fetcher.create({:receiver => VoiceMailHandler}.merge(@config))
    loop do
      @fetchers.each do |fetcher|
        fetcher.fetch
        sleep(@sleep_time)
      end
    end
  end
=end

  def self.stop
    puts "Stopping MailFetcherDaemon"
  end
  
end

MailFetcherDaemon.daemonize
